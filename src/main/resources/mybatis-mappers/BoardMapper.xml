<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace => mapper interfaace 경로 -->
<mapper namespace="com.project.notice_mybatis.mapper.BoardMapper">
    <sql id="boardColumns">
        idx
        , title
		, content
		, writer
		, view_cnt
		, notice_yn
		, secret_yn
		, delete_yn
		, insert_time
		, update_time
		, delete_time
    </sql>

    <!--
        mysql enum(여러값중 허용값만 저장가능), postgresql은 enum type이 없어 따로 타입을 생성해줘야됨.
        mysql ifnull / oracle nvl / postgresql coalesce
    -->
    <!--
        postgresql sequence auto increment 라 default로 둠
        mysql의 경우 default => #{idx}로 변경하면됨.
        postgresql : coalesce(cast(#{noticeYn} as enum), 'N') - enum type이 기본 데이터타입이 아니라 형변환 해줘야됨.
        mysql : ifnull(#{noticeYn},'N')
    -->
    <insert id="insertBoard" parameterType="BoardDTO">
        INSERT INTO tb_board (
        <include refid="boardColumns" />
        ) VALUES (
        default
        , #{title}
        , #{content}
        , #{writer}
        , 0
        , coalesce(cast(#{noticeYn} as enum), 'N')
        , coalesce(cast(#{secretYn} as enum), 'N')
        , 'N'
        , NOW()
        , NULL
        , NULL
        )
    </insert>

    <!--resultType => 쿼리결과 매핑할 타입지정. -->
    <!--factoryBean.setTypeAliasesPackage에 domain경로를 지정해두어 DTO부분만 사용.
        원본 : com.project.notice_mybatis.domain.BoardDTO -->
    <!--mybatis에선 파라미터 표현식으로 #{}를 사용.-->

    <select id="selectBoardDetail" parameterType="long" resultType="BoardDTO">
        SELECT
        <include refid="boardColumns"/>
        FROM
        tb_board
        WHERE
        delete_yn = 'N'
        AND
        idx = #{idx}
    </select>

    <update id="updateBoard" parameterType="BoardDTO">
        UPDATE tb_board
        SET update_time = NOW()
          , title       = #{title}
          , content     = #{content}
          , writer      = #{writer}
          , notice_yn   = coalesce(cast(#{noticeYn} as enum), 'N')
          , secret_yn   = coalesce(casT(#{secretYn} as enum), 'N')
        WHERE idx = #{idx}
    </update>

    <update id="deleteBoard" parameterType="long">
        UPDATE tb_board
        SET delete_yn   = 'Y'
          , delete_time = NOW()
        WHERE idx = #{idx}
    </update>

    <select id="selectBoardList" parameterType="BoardDTO" resultType="BoardDTO">
        SELECT
        <include refid="boardColumns"/>
        FROM
        tb_board
        WHERE
        delete_yn = 'N'
        ORDER BY
        notice_yn ASC,
        idx DESC,
        insert_time DESC
    </select>

    <select id="selectBoardTotalCount" parameterType="BoardDTO" resultType="int">
        SELECT COUNT(*)
        FROM tb_board
        WHERE delete_yn = 'N'
    </select>

</mapper>